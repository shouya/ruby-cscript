#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.8
# from Racc grammer file "".
#

require 'racc/parser.rb'
class CScriptParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
     2,    24,    25,    22,    23,    34,    15,    14,    24,    25,
    10,    24,    25,     4,     5,     6,    11,    35,    27,    15,
    14,    19,    20,    10,    21,    33,     4,     5,     6,    11,
   nil,   nil,    43,   nil,    19,    20,    15,    14,   nil,   nil,
    10,   nil,   nil,     4,     5,     6,    11,   nil,   nil,   nil,
    52,    19,    20,    15,    14,   nil,   nil,    10,   nil,   nil,
     4,     5,     6,    11,   nil,   nil,    15,    14,    19,    20,
    10,   nil,   nil,     4,     5,     6,    11,   nil,   nil,    43,
   nil,    19,    20,    15,    14,   nil,   nil,    10,   nil,   nil,
     4,     5,     6,    11,   nil,   nil,    43,   nil,    19,    20,
    24,    25,    22,    23,    24,    25,    22,    23,    24,    25,
    22,    23,   nil,   nil,    26,   nil,   nil,    49,   nil,   nil,
   nil,    41,    24,    25,    22,    23,   nil,   nil,   nil,    15,
    14,   nil,   nil,    10,   nil,    50,     4,     5,     6,    11,
    15,    14,   nil,   nil,    10,   nil,   nil,     4,     5,     6,
    11,    15,    14,   nil,   nil,    10,   nil,   nil,     4,     5,
     6,    11,    15,    14,   nil,   nil,    10,   nil,   nil,     4,
     5,     6,    11,    15,    14,   nil,   nil,    10,   nil,   nil,
     4,     5,     6,    11,    15,    14,   nil,   nil,    10,   nil,
   nil,     4,     5,     6,    11,    15,    14,   nil,   nil,    10,
   nil,   nil,     4,     5,     6,    11,    15,    14,   nil,   nil,
    10,   nil,   nil,     4,     5,     6,    11,    15,    14,   nil,
   nil,    10,   nil,   nil,     4,     5,     6,    11,    15,    14,
   nil,   nil,    10,   nil,   nil,     4,     5,     6,    11,    15,
    14,   nil,   nil,    10,   nil,   nil,     4,     5,     6,    11,
    24,    25,    22,    23 ]

racc_action_check = [
     1,    28,    28,    28,    28,    19,     1,     1,    36,    36,
     1,    37,    37,     1,     1,     1,     1,    20,     9,    49,
    49,     1,     1,    49,     2,    18,    49,    49,    49,    49,
   nil,   nil,    49,   nil,    49,    49,    48,    48,   nil,   nil,
    48,   nil,   nil,    48,    48,    48,    48,   nil,   nil,   nil,
    48,    48,    48,    43,    43,   nil,   nil,    43,   nil,   nil,
    43,    43,    43,    43,   nil,   nil,    33,    33,    43,    43,
    33,   nil,   nil,    33,    33,    33,    33,   nil,   nil,    33,
   nil,    33,    33,    50,    50,   nil,   nil,    50,   nil,   nil,
    50,    50,    50,    50,   nil,   nil,    50,   nil,    50,    50,
     8,     8,     8,     8,    45,    45,    45,    45,    29,    29,
    29,    29,   nil,   nil,     8,   nil,   nil,    45,   nil,   nil,
   nil,    29,    46,    46,    46,    46,   nil,   nil,   nil,    24,
    24,   nil,   nil,    24,   nil,    46,    24,    24,    24,    24,
    22,    22,   nil,   nil,    22,   nil,   nil,    22,    22,    22,
    22,    23,    23,   nil,   nil,    23,   nil,   nil,    23,    23,
    23,    23,    14,    14,   nil,   nil,    14,   nil,   nil,    14,
    14,    14,    14,    25,    25,   nil,   nil,    25,   nil,   nil,
    25,    25,    25,    25,    11,    11,   nil,   nil,    11,   nil,
   nil,    11,    11,    11,    11,    27,    27,   nil,   nil,    27,
   nil,   nil,    27,    27,    27,    27,    15,    15,   nil,   nil,
    15,   nil,   nil,    15,    15,    15,    15,    35,    35,   nil,
   nil,    35,   nil,   nil,    35,    35,    35,    35,    34,    34,
   nil,   nil,    34,   nil,   nil,    34,    34,    34,    34,    10,
    10,   nil,   nil,    10,   nil,   nil,    10,    10,    10,    10,
    40,    40,    40,    40 ]

racc_action_pointer = [
   nil,     0,    24,   nil,   nil,   nil,   nil,   nil,    96,    10,
   233,   178,   nil,   nil,   156,   200,   nil,   nil,    14,   -11,
     1,   nil,   134,   145,   123,   167,   nil,   189,    -3,   104,
   nil,   nil,   nil,    60,   222,   211,     4,     7,   nil,   nil,
   246,   nil,   nil,    47,   nil,   100,   118,   nil,    30,    13,
    77,   nil,   nil,   nil,   nil ]

racc_action_default = [
    -1,   -31,   -31,    -2,    -3,    -4,    -5,    -6,   -31,   -11,
   -31,   -31,   -14,   -15,   -31,   -31,   -22,   -23,   -26,   -31,
   -31,    55,   -31,   -31,   -31,   -31,   -21,   -31,   -12,   -31,
   -16,   -17,   -27,   -31,   -31,   -31,    -7,    -8,    -9,   -10,
   -18,   -13,   -24,   -31,   -29,   -31,   -31,   -19,   -31,   -31,
   -31,   -20,   -25,   -28,   -30 ]

racc_goto_table = [
     3,    28,    29,    44,    48,    30,    31,     1,    32,   nil,
   nil,   nil,   nil,    36,    37,    38,    39,   nil,    40,    53,
    54,   nil,   nil,   nil,   nil,    45,    46,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    47,   nil,   nil,   nil,   nil,    51 ]

racc_goto_check = [
     2,     5,     5,    11,     8,     5,     5,     1,    13,   nil,
   nil,   nil,   nil,     5,     5,     5,     5,   nil,     5,    11,
    11,   nil,   nil,   nil,   nil,     5,     5,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     2,   nil,   nil,   nil,   nil,     2 ]

racc_goto_pointer = [
   nil,     7,    -1,   nil,   nil,    -9,   nil,   nil,   -39,   nil,
   nil,   -30,   nil,   -10 ]

racc_goto_default = [
   nil,   nil,    42,     7,     9,     8,    12,    13,   nil,    16,
    17,   nil,    18,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 24, :_reduce_1,
  2, 24, :_reduce_2,
  1, 26, :_reduce_3,
  1, 26, :_reduce_4,
  1, 27, :_reduce_5,
  1, 28, :_reduce_6,
  3, 28, :_reduce_7,
  3, 28, :_reduce_8,
  3, 28, :_reduce_9,
  3, 28, :_reduce_10,
  1, 28, :_reduce_11,
  2, 28, :_reduce_12,
  3, 28, :_reduce_13,
  1, 28, :_reduce_14,
  1, 28, :_reduce_15,
  2, 30, :_reduce_16,
  2, 30, :_reduce_17,
  3, 29, :_reduce_18,
  1, 31, :_reduce_19,
  2, 31, :_reduce_20,
  2, 25, :_reduce_21,
  1, 25, :_reduce_22,
  1, 25, :_reduce_23,
  1, 34, :_reduce_24,
  3, 34, :_reduce_25,
  1, 32, :_reduce_26,
  2, 32, :_reduce_27,
  5, 35, :_reduce_28,
  2, 36, :_reduce_29,
  5, 33, :_reduce_30 ]

racc_reduce_n = 31

racc_shift_n = 55

racc_token_table = {
  false => 0,
  :error => 1,
  :UMINUS => 2,
  :UPLUS => 3,
  "*" => 4,
  "/" => 5,
  "+" => 6,
  "-" => 7,
  "=" => 8,
  :noassoc => 9,
  "%" => 10,
  :ELSE => 11,
  :LOWER_THAN_ELSE => 12,
  :STRING => 13,
  :INTEGER => 14,
  :NAME => 15,
  "(" => 16,
  ")" => 17,
  ";" => 18,
  "{" => 19,
  "}" => 20,
  :IF => 21,
  :WHILE => 22 }

racc_nt_base = 23

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "UMINUS",
  "UPLUS",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "\"=\"",
  "noassoc",
  "\"%\"",
  "ELSE",
  "LOWER_THAN_ELSE",
  "STRING",
  "INTEGER",
  "NAME",
  "\"(\"",
  "\")\"",
  "\";\"",
  "\"{\"",
  "\"}\"",
  "IF",
  "WHILE",
  "$start",
  "main_rule",
  "stmt",
  "literal",
  "name",
  "expr",
  "assignment",
  "unary_op",
  "stmt_lst",
  "x_if",
  "x_while",
  "stmt_or_blk",
  "if_part",
  "else_part" ]

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'cscript_yacc.y', 29)
  def _reduce_1(val, _values, result)
     return mkCtrl(:EMPTY_STMT) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 30)
  def _reduce_2(val, _values, result)
     return val[0].append val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 33)
  def _reduce_3(val, _values, result)
     return mkVal(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 34)
  def _reduce_4(val, _values, result)
     return mkVal(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 37)
  def _reduce_5(val, _values, result)
     return mkVal(val[0], :NAME) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 40)
  def _reduce_6(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 41)
  def _reduce_7(val, _values, result)
     return mkCtrl(:PLUS, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 42)
  def _reduce_8(val, _values, result)
     return mkCtrl(:MINUS, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 43)
  def _reduce_9(val, _values, result)
     return mkCtrl(:MULTIPLY, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 44)
  def _reduce_10(val, _values, result)
     return mkCtrl(:DIVIDE, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 45)
  def _reduce_11(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 46)
  def _reduce_12(val, _values, result)
     return mkCtrl(:PRINT, val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 47)
  def _reduce_13(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 48)
  def _reduce_14(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 49)
  def _reduce_15(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 52)
  def _reduce_16(val, _values, result)
     return mkCtrl(:UMINUS, val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 53)
  def _reduce_17(val, _values, result)
     return mkCtrl(:UPLUS, val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 56)
  def _reduce_18(val, _values, result)
                return mkCtrl(:ASSIGN, val[0], val[2])
        
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 60)
  def _reduce_19(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 61)
  def _reduce_20(val, _values, result)
     return val[0].append val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 64)
  def _reduce_21(val, _values, result)
     return mkCtrl(:EXPR_STMT, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 65)
  def _reduce_22(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 66)
  def _reduce_23(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 69)
  def _reduce_24(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 70)
  def _reduce_25(val, _values, result)
     return val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 72)
  def _reduce_26(val, _values, result)
     return val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 73)
  def _reduce_27(val, _values, result)
     return val[0] << val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 77)
  def _reduce_28(val, _values, result)
                return mkCtrl(:IF_PART, val[2], val[4])
        
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 82)
  def _reduce_29(val, _values, result)
                return mkCtrl(:ELSE_PART, val[1])
        
    result
  end
.,.,

module_eval(<<'.,.,', 'cscript_yacc.y', 87)
  def _reduce_30(val, _values, result)
                return mkCtrl(:WHILE, val[2], val[4]);
        
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class CScriptParser
